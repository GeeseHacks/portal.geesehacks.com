name: Vercel Preview Deployment with Cypress

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}

on:
  pull_request:
  workflow_dispatch:

jobs:
  Deploy-Preview:
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.deploy.outputs.DEPLOYMENT_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Vercel CLI
        run: npm install -g vercel
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN

      - name: Install dependencies
        run: npm install

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run Jest Tests
        env:
          POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}
        run: npm run test

      - name: Build Project Artifacts
        run: vercel build --token=$VERCEL_TOKEN
      
      - name: Deploy Project Artifacts
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=$VERCEL_TOKEN --env VERCEL_ORG_ID=$VERCEL_ORG_ID --env VERCEL_PROJECT_ID=$VERCEL_PROJECT_ID)
          # Output the deployment URL for other jobs to use
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          # Output the deployment URL for the current job to use
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV

      - name: Create Github Comment with URL
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = `Preview URL: ${{ env.DEPLOYMENT_URL }}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: url
            })

  Cypress-Test:
    runs-on: ubuntu-latest
    needs: Deploy-Preview  # Ensure Cypress tests run after deployment
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Cypress
        run: npm install cypress --save-dev

      - name: Create cypress.env.json from Secret
        run: |
          echo '${{ secrets.CYPRESS_ENV_JSON }}' > cypress.env.json

      - name: Run Cypress Tests
        env:
          DEPLOYMENT_URL: ${{ needs.Deploy-Preview.outputs.deployment-url }}
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
        run: npx cypress run --config baseUrl=${{ env.DEPLOYMENT_URL }}
