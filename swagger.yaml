openapi: 3.0.0
info:
  title: Registration Portal API
  version: 1.1.1
  description: API Documentation for the Registration Portal
servers:
  - url: http://localhost:3000
    description: Local server for development
tags:
  - name: auth
    description: Authentication related endpoints
  - name: users
    description: User related endpoints
  - name: application-responses
    description: Application responses related endpoints
  - name: resumes
    description: Resume related endpoints
  - name: qr-codes
    description: QR Code registration related endpoints
  - name: stock-sim
    description: Stock simulator related endpoints
  - name: flags
    description: Feature flags configuration endpoints
paths:
  /api/projects/project-list:
    get:
      tags:
        - projects
      summary: Get a list of users by project ID
      parameters:
        - name: project_id
          in: query
          required: true
          schema:
            type: string
          description: The ID of the project.
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Missing or invalid project ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Project ID is required"
  /api/projects:
    get:
      tags:
        - projects
      summary: Get the project ID for a given user ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: The user ID.
      responses:
        '200':
          description: Project ID for the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  project_id:
                    type: string
                    example: "123"
        '400':
          description: Missing or invalid user ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User ID is required"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to fetch user team"
    post:
      tags:
        - projects
      summary: Update the project ID for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: The ID of the user.
                project_id:
                  type: string
                  description: The new project ID to assign.
              required:
                - user_id
                - project_id
      responses:
        '200':
          description: Project ID updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Missing or invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User ID and project ID are required"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to join team"
  /api/flags:
    get:
      tags:
        - flags
      summary: Get feature flags from Google Sheets
      description: Retrieves feature flags configuration from a Google Sheets document
      responses:
        '200':
          description: Feature flags retrieved successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: boolean
                example:
                  isFeatureEnabled: true
                  isRegistrationOpen: false
        '404':
          description: No flags data found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No data found"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error fetching data"
components:
  schemas:
    UserAuth:
      type: object
      properties:
        email:
          type: string
          example: user@example.com
        password:
          type: string
          example: secret_password
    User:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for a user.
        firstname:
          type: string
          description: The user's first name.
        lastname:
          type: string
          description: The user's last name.
        age:
          type: integer
          minimum: 0
          description: The user's age.
        email:
          type: string
          description: The user's email address.
        phone_number:
          type: string
          description: The user's phone number.
        school:
          type: string
          description: The school the user attends.
        level_of_study:
          type: string
          description: The user's level of study.
        country_of_residence:
          type: string
          description: The user's country of residence.
        dietary_restrictions:
          type: string
          description: The user's dietary restrictions.
        github:
          type: string
          description: The user's GitHub profile URL.
        linkedin:
          type: string
          description: The user's LinkedIn profile URL.
        personal_website:
          type: string
          description: The user's personal website.
        MLH_authorize:
          type: boolean
          description: MLH authorization status.
        field_of_study:
          type: string
          description: The user's field of study.
        optional_consider:
          type: string
          description: Optional considerations.
        optional_gender:
          type: string
          description: The user's gender.
        optional_pronouns:
          type: string
          description: The user's pronouns.
        optional_race:
          type: string
          description: The user's race.
        optional_underrepresented:
          type: string
          description: Optional underrepresented group.
        other_dietary_restrictions:
          type: string
          description: Other dietary restrictions.
        resume:
          type: string
          format: uri
          description: The user's resume URL.
        t_shirt_size:
          type: string
          description: The user's t-shirt size.
        status:
          type: string
          enum:
            - ACCEPTED
            - REJECTED
            - WAITLIST
            - APPLIED
            - NOT_APPLIED
          description: The user's application status.
